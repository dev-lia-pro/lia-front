name: iOS Build

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-ios:
    name: Build iOS IPA
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          pod --version

      - name: Install dependencies
        run: npm ci

      - name: Create production .env file
        run: |
          echo "VITE_BASE_API_URL=${{ secrets.VITE_BASE_API_URL }}" > .env.mobile
          echo "VITE_WS_URL=${{ secrets.VITE_WS_URL }}" >> .env.mobile
          echo "VITE_PUBLIC_POSTHOG_KEY=${{ secrets.VITE_PUBLIC_POSTHOG_KEY }}" >> .env.mobile
          echo "VITE_PUBLIC_POSTHOG_HOST=${{ secrets.VITE_PUBLIC_POSTHOG_HOST }}" >> .env.mobile

      - name: Build frontend for mobile
        run: npm run build:mobile

      - name: Sync Capacitor
        run: npx cap sync ios

      - name: Install iOS dependencies (CocoaPods)
        working-directory: ios/App
        run: pod install

      # For development/debug builds
      - name: Build iOS Debug
        if: "!startsWith(github.ref, 'refs/tags/v')"
        working-directory: ios/App
        run: |
          xcodebuild -workspace App.xcworkspace \
            -scheme App \
            -configuration Debug \
            -destination 'generic/platform=iOS' \
            -archivePath $PWD/build/App.xcarchive \
            -allowProvisioningUpdates \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            clean archive

      - name: Upload Debug Archive
        if: "!startsWith(github.ref, 'refs/tags/v')"
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-xcarchive
          path: ios/App/build/App.xcarchive
          retention-days: 30

      # For release builds with signing
      - name: Import Code-Signing Certificates
        if: startsWith(github.ref, 'refs/tags/v')
        uses: Apple-Actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_CERTIFICATES_P12 }}
          p12-password: ${{ secrets.IOS_CERTIFICATES_PASSWORD }}

      - name: Download Provisioning Profiles
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.IOS_PROVISIONING_PROFILE }}" | base64 -d > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision

      - name: Build iOS Release
        if: startsWith(github.ref, 'refs/tags/v')
        working-directory: ios/App
        run: |
          xcodebuild -workspace App.xcworkspace \
            -scheme App \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath $PWD/build/App.xcarchive \
            clean archive

      - name: Export IPA
        if: startsWith(github.ref, 'refs/tags/v')
        working-directory: ios/App
        run: |
          xcodebuild -exportArchive \
            -archivePath $PWD/build/App.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath $PWD/build/ipa

      - name: Upload IPA
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: app-release-ipa
          path: ios/App/build/ipa/App.ipa
          retention-days: 30

      # Upload to TestFlight
      - name: Upload to TestFlight
        if: startsWith(github.ref, 'refs/tags/v')
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: ios/App/build/ipa/App.ipa
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
